name: "Release: Publish"

on:
  push:
    branches:
      - main

jobs:
  release:
    name: "Release"
    if: ${{ startsWith(github.event.head_commit.message, 'Release v') }}

    permissions:
      # read: actions/checkout
      # write: gh release create
      contents: write

    runs-on: ubuntu-latest
    timeout-minutes: 5

    defaults:
      run:
        shell: bash

    steps:

      - name: "Checkout ${{ github.ref }} branch in ${{ github.repository }} repository."
        uses: actions/checkout@v4

      - name: "Set up Java."
        uses: actions/setup-java@v4
        with:
          java-version-file: .java-version
          distribution: temurin

      - name: "Build CLI."
        run: >
          ./gradlew
          --no-daemon
          --continue
          --stacktrace
          versionFile
          fatJar
          distZip

      - name: "Version"
        id: prepare
        env:
          RELEASE_DIR: "release"
        run: |
          mkdir "${RELEASE_DIR}"
          cp "modules/ghlint/build/version.txt" "${RELEASE_DIR}/version.txt"
          cp "modules/ghlint/build/libs/ghlint-${VERSION}-fat.jar" "${RELEASE_DIR}/ghlint.jar"
          cp "modules/ghlint/build/distributions/ghlint-${VERSION}.zip" "${RELEASE_DIR}/ghlint.zip"
          echo "version=$(cat release/version.txt)" >> "${GITHUB_OUTPUT}"

      - name: "Create Release."
        env:
          GH_TOKEN: ${{ github.token }}
          RELEASE_TAG: v${{ steps.prepare.outputs.version }}
          RELEASE_TITLE: v${{ steps.prepare.outputs.version }}
        run: |
          link=$(
              gh release create "${RELEASE_TAG}" \
                  --title "${RELEASE_TITLE}" \
                  --latest \
                  --generate-notes \
                  "release/ghlint.jar" \
                  "release/ghlint.zip"
          )
          echo "::notice title=Release '${RELEASE_TITLE}' created::${link}"
